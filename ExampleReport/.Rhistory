#################
# Download European Capital to Total Assets from World Bank
# Christopher Gandrud
# 27 July 2014
# Copyright Tier 1 Reports
################
# Set working directory
setwd('~/Desktop/Tier1/Proof/')
# Load packages
library(WDI)
library(DataCombine)
# Download raw data
Downloaded <- WDI(indicator = 'FB.BNK.CAPA.ZS', start = 2007, end = 2013,
extra = TRUE)
# Extract only European countries
Subsetted <- grepl.sub(Downloaded, pattern = c('Europe', 'East Asia',
'North America'), Var = 'region')
# Save data for use in report
write.csv(Subsetted, file = 'CapitalData.csv')
setwd('/git_repositories/Tier1StyleGuide/ExampleReport/data/')
#################
# Download European Capital to Total Assets from World Bank
# Christopher Gandrud
# 27 July 2014
# Copyright Tier 1 Reports
################
# Set working directory
setwd('/git_repositories/Tier1StyleGuide/ExampleReport/data/')
# Load packages
library(WDI)
library(DataCombine)
# Download raw data
Downloaded <- WDI(indicator = 'FB.BNK.CAPA.ZS', start = 2007, end = 2013,
extra = TRUE)
# Extract only European countries
Subsetted <- grepl.sub(Downloaded, pattern = c('Europe', 'East Asia',
'North America'), Var = 'region')
# Save data for use in report
write.csv(Subsetted, file = 'CapitalData.csv')
library(countrycode)
regions = read.csv("europe_country_regions.csv", stringsAsFactors = FALSE)
View(regions)
?countrycode
library(DataCombine)
regions = read.csv("europe_country_regions.csv", stringsAsFactors = FALSE)
View(regions)
regions$iso2c = countrycode(regions$country, origin = "country.name",
destination = 'iso2c', warn = TRUE)
regions = read.csv("europe_country_regions.csv", stringsAsFactors = FALSE)
regions$iso2c = countrycode(regions$country, origin = "country.name",
destination = 'iso2c', warn = TRUE)
View(regions)
regions = MoveFront(regions, Var = 'iso2c')
View(regions)
write.csv(regions, file = 'europe_country_regions.csv')
regions <- read.csv('europe_country_regions.csv', stringsAsFactors = FALSE)
Comb <- merge(Subsetted, regions, by = 'iso2c', all.x = TRUE)
View(Comb)
names(regions) <- c('iso2c', 'EuropeanRegions')
regions <- read.csv('europe_country_regions.csv', stringsAsFactors = FALSE)
regions <- regions[, -2] # removes country name
View(regions)
regions <- read.csv('europe_country_regions.csv', stringsAsFactors = FALSE)
regions = read.csv("europe_country_regions.csv", stringsAsFactors = FALSE)
regions$iso2c = countrycode(regions$country, origin = "country.name",
destination = 'iso2c', warn = TRUE)
regions = MoveFront(regions, Var = 'iso2c')
write.csv(regions, file = 'europe_country_regions.csv', row.names = FALSE)
regions <- read.csv('europe_country_regions.csv', stringsAsFactors = FALSE)
rm(regions)
?write.csv
regions = read.csv("europe_country_regions.csv", stringsAsFactors = FALSE)
regions$iso2c = countrycode(regions$country, origin = "country.name",
destination = 'iso2c', warn = TRUE)
regions = MoveFront(regions, Var = 'iso2c')
View(regions)
regions = VarDrop(regions, 'X')
View(regions)
write.csv(regions, file = 'europe_country_regions.csv', row.names = FALSE)
#################
# Download European Capital to Total Assets from World Bank
# Christopher Gandrud
# 27 July 2014
# Copyright Tier 1 Reports
################
# Set working directory
setwd('/git_repositories/Tier1StyleGuide/ExampleReport/data/')
# Load packages
library(WDI)
library(DataCombine)
# Download raw data
Downloaded <- WDI(indicator = 'FB.BNK.CAPA.ZS', start = 2007, end = 2013,
extra = TRUE)
# Extract only European, East Asian, and North American countries
Subsetted <- grepl.sub(Downloaded, pattern = c('Europe', 'East Asia',
'North America'), Var = 'region')
# Add regions to European countries
regions <- read.csv('europe_country_regions.csv', stringsAsFactors = FALSE)
regions <- regions[, -2] # removes country name
names(regions) <- c('iso2c', 'EuropeanRegions')
View(regions)
Comb <- merge(Subsetted, regions, by = 'iso2c', all.x = TRUE)
View(Comb)
write.csv(Subsetted, file = 'CapitalData.csv')
?DropNA
MainData <- read.csv('data/CapitalData.csv', stringsAsFactors=FALSE)
View(Comb)
setwd('/git_repositories/Tier1StyleGuide/ExampleReport/')
MainData <- read.csv('data/CapitalData.csv', stringsAsFactors=FALSE)
MainAll <- group_by(MainData, region, year)
MedianData <- summarise(MainAll, MedianCap = median(FB.BNK.CAPA.ZS, na.rm = TRUE))
library(dplyr)
library(rCharts)
library(DataCombine)
MainAll <- group_by(MainData, region, year)
MedianData <- summarise(MainAll, MedianCap = median(FB.BNK.CAPA.ZS, na.rm = TRUE))
# Plot
Plot1 <- nPlot(MedianCap~year, group = 'region', type = "lineChart",
data =  MedianData)
Plot1$chart(forceY = c(0, 12))
Plot1$set(width = 700, height = 300)
Plot1$show('inline', include_assets = TRUE, cdn = TRUE)
Europe <- DropNA(MainData, 'EuropeanRegions')
names(MainData)
setwd('/git_repositories/Tier1StyleGuide/ExampleReport/data/')
# Load packages
library(WDI)
library(DataCombine)
# Download raw data
Downloaded <- WDI(indicator = 'FB.BNK.CAPA.ZS', start = 2007, end = 2013,
extra = TRUE)
# Extract only European, East Asian, and North American countries
Subsetted <- grepl.sub(Downloaded, pattern = c('Europe', 'East Asia',
'North America'), Var = 'region')
# Add regions to European countries
regions <- read.csv('europe_country_regions.csv', stringsAsFactors = FALSE)
regions <- regions[, -2] # removes country name
names(regions) <- c('iso2c', 'EuropeanRegions')
write.csv(Comb, file = 'CapitalData.csv')
#################
# Download European Capital to Total Assets from World Bank
# Christopher Gandrud
# 27 July 2014
# Copyright Tier 1 Reports
################
# Set working directory
setwd('/git_repositories/Tier1StyleGuide/ExampleReport/data/')
# Load packages
library(WDI)
library(DataCombine)
# Download raw data
Downloaded <- WDI(indicator = 'FB.BNK.CAPA.ZS', start = 2007, end = 2013,
extra = TRUE)
# Extract only European, East Asian, and North American countries
Subsetted <- grepl.sub(Downloaded, pattern = c('Europe', 'East Asia',
'North America'), Var = 'region')
# Add regions to European countries
regions <- read.csv('europe_country_regions.csv', stringsAsFactors = FALSE)
regions <- regions[, -2] # removes country name
names(regions) <- c('iso2c', 'EuropeanRegions')
Comb <- merge(Subsetted, regions, by = 'iso2c', all.x = TRUE)
# Save data for use in report
write.csv(Comb, file = 'CapitalData.csv')
library(xtable)
?xtable
Europe2013 <- subset(Europe, year = 2013)
setwd('/git_repositories/Tier1StyleGuide/ExampleReport/')
MainData <- read.csv('data/CapitalData.csv', stringsAsFactors=FALSE)
Europe <- DropNA(MainData, 'EuropeanRegions')
Europe2013 <- subset(Europe, year = 2013)
Europe <- arrange(Europe2013, FB.BNK.CAPA.ZS)
View(Europe2013)
Europe2013 <- subset(Europe, year == 2013)
# Order from highest to lowest
Europe <- arrange(Europe2013, FB.BNK.CAPA.ZS)
View(Europe)
names(Europe2013) <- c('Country', 'Bank capital/assets (%)')
View(Europe2013)
Europe2013 <- subset(Europe, year == 2013)
# Order from lowest to highest
Europe <- arrange(Europe2013, FB.BNK.CAPA.ZS)
# Clean
Europe2013[, c('country', 'FB.BNK.CAPA.ZS')]
names(Europe2013) <- c('Country', 'Bank capital/assets (%)')
Europe2013 <- Europe2013[, c('country', 'FB.BNK.CAPA.ZS')]
Europe2013 <- subset(Europe, year == 2013)
# Order from lowest to highest
Europe <- arrange(Europe2013, FB.BNK.CAPA.ZS)
Europe <- DropNA(MainData, 'EuropeanRegions')
Europe2013 <- subset(Europe, year == 2013)
# Order from lowest to highest
Europe2013 <- arrange(Europe2013, FB.BNK.CAPA.ZS)
# Clean
Europe2013 <- Europe2013[, c('country', 'FB.BNK.CAPA.ZS')]
names(Europe2013) <- c('Country', 'Bank capital/assets (%)')
View(Europe2013)
Europe2013 <- subset(Europe, year == 2013)
# Order from lowest to highest
Europe2013 <- arrange(Europe2013, FB.BNK.CAPA.ZS)
Europe2013$FB.BNK.CAPA.ZS <- round(Europe2013$FB.BNK.CAPA.ZS)
# Clean
Europe2013 <- Europe2013[, c('country', 'FB.BNK.CAPA.ZS')]
names(Europe2013) <- c('Country', 'Bank capital/assets (%)')
View(Europe2013)
Europe2013$FB.BNK.CAPA.ZS <- round(Europe2013$FB.BNK.CAPA.ZS, digits = 2)
Europe2013 <- subset(Europe, year == 2013)
# Order from lowest to highest
Europe2013 <- arrange(Europe2013, FB.BNK.CAPA.ZS)
Europe2013$FB.BNK.CAPA.ZS <- round(Europe2013$FB.BNK.CAPA.ZS, digits = 2)
# Clean
Europe2013 <- Europe2013[, c('country', 'FB.BNK.CAPA.ZS')]
names(Europe2013) <- c('Country', 'Bank capital/assets (%)')
View(Europe2013)
Table2013 <- xtable(Europe2013)
print(Table2013, type = 'html')
names(Europe2013) <- c('Country', 'Bank capital/assets (%)')
View(Europe2013)
print(Table2013, type = 'html', row.names = FALSE)
print(Table2013, type = 'html', include.rownames = FALSE, hline.after = NULL)
Europe2013 <- subset(Europe, year == 2013)
# Order from lowest to highest
Europe2013 <- arrange(Europe2013, FB.BNK.CAPA.ZS)
Europe2013$FB.BNK.CAPA.ZS <- round(Europe2013$FB.BNK.CAPA.ZS, digits = 2)
Europe2013$FB.BNK.CAPA.ZS[is.na(Europe2013$FB.BNK.CAPA.ZS)] <- 'No Data'
Europe2013 <- Europe2013[, c('country', 'FB.BNK.CAPA.ZS')]
names(Europe2013) <- c('Country', 'Bank capital/assets (%)')
View(Europe2013)
WEurope <- subset(MainData, EuropeanRegions == 'Wester Europe')
WEurope <- subset(MainData, EuropeanRegions == 'Western Europe')
WEuropeGrouped <- group_by(WEurope, country, year)
MedianWE <- summarise(WEuropeGrouped, MedianCap = median(FB.BNK.CAPA.ZS,
na.rm = TRUE))
Plot1 <- nPlot(MedianCap~year, group = 'country', type = "lineChart",
data =  MedianWE)
Plot1$chart(forceY = c(0, 25))
Plot1$set(width = 700, height = 300)
Plot1$show('inline', include_assets = TRUE, cdn = TRUE)
